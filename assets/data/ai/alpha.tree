#Wolf alpha tree

#Aliases
import randomWalk: "rakaneth.wolfsden.ai.RandomWalkTask"
import detectPrey?: "rakaneth.wolfsden.ai.DetectPreyCondition"
import getTarget: "rakaneth.wolfsden.ai.GetTargetTask"
import moveTowardsPrey: "rakaneth.wolfsden.ai.MoveTowardsPreyTask"
import preyAdjacent?: "rakaneth.wolfsden.ai.PreyAdjacentCondition"
import attackPrey: "rakaneth.wolfsden.ai.AttackPreyTask"
import preyNull?: "rakaneth.wolfsden.ai.PreyNullCondition"
import preyAlive?: "rakaneth.wolfsden.ai.PreyAliveCondition"
import preySameLevel?: "rakaneth.wolfsden.ai.PreySameLevelCondition"
import detectFood?: "rakaneth.wolfsden.ai.DetectFoodCondition"
import onFood?: "rakaneth.wolfsden.ai.OnFoodCondition"
import moveTowardsFood: "rakaneth.wolfsden.ai.MoveTowardsFoodTask"
import eatFood: "rakaneth.wolfsden.ai.EatFoodTask"
import commandLackeys: "rakaneth.wolfsden.ai.CommandLackeysTask"

#Check for prey existence
subtree name: "preyExists?"
	sequence
		invert
			preyNull?
		preySameLevel?
		preyAlive?

#Hunting a target
subtree name: "huntPrey"
	sequence
		commandLackeys
		selector
			(preyAdjacent?) attackPrey
			moveTowardsPrey

#Looking for food
subtree name:"huntFood"
	selector
		(onFood?) eatFood
		moveTowardsFood

#tree definition
root
	dynamicGuardSelector
		($preyExists?) $huntPrey
		(detectPrey?) getTarget
		(detectFood?) $huntFood
		() randomWalk
